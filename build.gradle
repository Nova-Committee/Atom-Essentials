buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        maven { url = 'https://maven.parchmentmc.org' }
        maven { url = 'https://oss.sonatype.org/content/groups/public/' }
        maven { url = "https://jitpack.io" }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath 'org.parchmentmc:librarian:1.+'
        classpath group: 'gradle.plugin.com.github.johnrengelman', name: 'shadow', version: '7.1.2'
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'com.github.johnrengelman.shadow'

group = 'nova.committee'
version = '1.18.2-1.0.1'

java {
    archivesBaseName = 'AtomEssential-forge'
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

minecraft {
    mappings channel: 'parchment', version: '2022.06.05-1.18.2'

    //mappings channel: 'official', version: '1.18.2'

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')


    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'atomess'

            mods {
                atomess {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'atomess'

            mods {
                atomess {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'atomess'

            mods {
                atomess {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'atomess', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                atomess {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "atomess.refmap.json"

    config "atomess.mixins.json"
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url 'https://www.cursemaven.com'
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        //location of the maven for curios api
        url = "https://maven.theillusivec4.top/"
    }
    maven { url = "https://jitpack.io" }
    mavenCentral()
    flatDir {
        dirs('libs')
    }
}

configurations {
    shade
    compileOnly.extendsFrom(shade)
}

dependencies {

    minecraft 'net.minecraftforge:forge:1.18.2-40.1.31'

    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_minecraft_version}-${curios_version}:api")
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_minecraft_version}-${curios_version}")
    compileOnly 'net.luckperms:api:5.4'
    shade("cn.evolvefield.mods.atom.lib:atomlib-forge:1.18.2-1.0.0")
    runtimeOnly("cn.evolvefield.mods.atom.lib:atomlib-forge:1.18.2-1.0.0")
    //shade ("com.github.cnlimiter:AtomLib:forge~1.18-SNAPSHOT")

    //compileOnly project(":atomlib")
    //runtimeOnly project(":atomlib")

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

shadowJar {
    configurations = [project.configurations.shade]
    classifier ''
    //relocate 'cn.evolvefield.mods.atomlib','cn.evolvefield.mods.trafes.atomlib'

    exclude("cn/evolvefield/mods/atom/lib/AtomLib.class")
    //exclude("META-INF/MANIFEST.MF", "META-INF/mods.toml")
    finalizedBy 'reobfShadowJar'
}

artifacts {
    archives tasks.shadowJar
}

reobf {
    shadowJar {}
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "atomess",
                "Specification-Vendor"    : "cnlimiter",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "cnlimiter",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')
